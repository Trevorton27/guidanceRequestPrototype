{"version":3,"sources":["App.js","index.js"],"names":["App","useState","inputList","setInputList","description","setDescription","link","setLink","errorsExceptions","setErrorsExceptions","googled","setGoogled","testCaseStep","setTestCaseStep","testCaseExpectation","settestCaseExpectation","testCaseResult","setTestCaseResult","popoverOpen","setPopoverOpen","formInfo","issueDiscription","issueLink","issueErrorsExceptions","googleResults","testCaseStepInfo","testCaseExpectationInfo","testCaseResultInfo","useEffect","console","log","handleAddClick","e","preventDefault","className","style","width","type","name","value","placeholder","onChange","target","map","x","i","paddingBottom","marginTop","marginBottom","float","length","onClick","index","splice","class","Button","color","textAlign","id","Popover","placement","isOpen","toggle","closePopover","setTimeout","PopoverHeader","PopoverBody","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b10fe782.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Popover, PopoverHeader, PopoverBody, popoverOpen } from 'reactstrap';\r\n\r\n//import Popover from './Popover';\r\n\r\nfunction App() {\r\n  const [inputList, setInputList] = useState([{}]);\r\n  const [description, setDescription] = useState('');\r\n  const [link, setLink] = useState('');\r\n  const [errorsExceptions, setErrorsExceptions] = useState('');\r\n  const [googled, setGoogled] = useState('');\r\n  const [testCaseStep, setTestCaseStep] = useState('');\r\n  const [testCaseExpectation, settestCaseExpectation] = useState();\r\n  const [testCaseResult, setTestCaseResult] = useState('');\r\n  const [popoverOpen, setPopoverOpen] = useState(false);\r\n\r\n  const formInfo = {\r\n    issueDiscription: description,\r\n    issueLink: link,\r\n    issueErrorsExceptions: errorsExceptions,\r\n    googleResults: googled,\r\n    testCaseStepInfo: testCaseStep,\r\n    testCaseExpectationInfo: testCaseExpectation,\r\n    testCaseResultInfo: testCaseResult\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('list: ', inputList);\r\n  });\r\n\r\n  // const list = [...inputList];\r\n\r\n  // handle input change\r\n  // const handleInputChange = (e, index) => {\r\n  //   const { name, value } = e.target;\r\n  //   list[index][name] = value;\r\n  //   setInputList(list);\r\n  //   //testCaseStep += testCaseStep;\r\n  // };\r\n\r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = (index) => {\r\n    inputList.splice(index, 1);\r\n    setInputList([...inputList]);\r\n  };\r\n\r\n  // handle click event of the Add button\r\n  const handleAddClick = (e) => {\r\n    e.preventDefault();\r\n    setInputList([...inputList, formInfo]);\r\n  };\r\n\r\n  const ShowList = () => {\r\n    //setInputList([...inputList, formInfo]);\r\n    console.log('list: ', inputList);\r\n  };\r\n\r\n  const togglePopover = () => {\r\n    const closePopover = setTimeout(() => setPopoverOpen(false), 3000);\r\n    setPopoverOpen(closePopover);\r\n  };\r\n  return (\r\n    <div className='App container justify-content-center'>\r\n      <h3>SDMM Guidance Request Form</h3>\r\n      <form style={{ width: '80%' }}>\r\n        <p>\r\n          Thank you for taking the time to take this important step! Yes, we\r\n          know guidance requests can be a hassle but the truth is not only do\r\n          they help us help you. They help <em>you</em> help you by making you\r\n          better at communicating issues in a way your team members can act upon\r\n          without a lot of back and forth. This is a crucial skill in\r\n          programming.\r\n        </p>\r\n        <h4>\r\n          @support-coaches, I need some guidance. Here is my guidance request\r\n          post:\r\n        </h4>\r\n        <div className='mb-3'>\r\n          <label className='form-label'>Description </label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='description'\r\n            value={description}\r\n            placeholder='3 - 5 sentences maximum'\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className='mb-3'>\r\n          <label className='form-label'>Link </label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='link'\r\n            value={link}\r\n            placeholder='Link to project repository goes here'\r\n            onChange={(e) => setLink(e.target.value)}\r\n          />\r\n        </div>\r\n        <label className='form-label'>Test Case </label>\r\n        {inputList.map((x, i) => {\r\n          return (\r\n            <div className='mb-3' style={{ paddingBottom: '10px' }}>\r\n              <label className='form-label'>Step {i + 1} </label>\r\n              <input\r\n                className='form-control'\r\n                name='testCaseStep'\r\n                placeholder='Describe specific step to take.'\r\n                value={x.testCaseStep}\r\n                onChange={(e) => setTestCaseStep(e.target.value)}\r\n              />\r\n              <label className='form-label'>EXPECTATION</label>\r\n              <input\r\n                className='form-control'\r\n                name='testCaseExpectation'\r\n                placeholder='Describe the outcome you expect.'\r\n                value={x.testCaseExpectation}\r\n                onChange={(e) => settestCaseExpectation(e.target.value)}\r\n              />\r\n              <label className='form-label'>ACTUAL RESULT </label>\r\n              <input\r\n                className='form-control'\r\n                name='testCaseResult'\r\n                placeholder='Describe the actual outcome.'\r\n                value={x.testCaseResult}\r\n                onChange={(e) => setTestCaseResult(e.target.value)}\r\n              />\r\n\r\n              <div\r\n                className='btn-box'\r\n                style={{\r\n                  marginTop: '5px',\r\n                  marginBottom: '5px',\r\n                  float: 'right'\r\n                }}\r\n              >\r\n                {inputList.length !== 1 && (\r\n                  <button\r\n                    type='button'\r\n                    className='btn btn-danger '\r\n                    style={{ float: 'right' }}\r\n                    onClick={() => handleRemoveClick(i)}\r\n                  >\r\n                    Remove Step {i + 1}\r\n                  </button>\r\n                )}\r\n                {inputList.length - 1 === i && (\r\n                  <button\r\n                    style={{ marginTop: '5px', float: 'right', width: '133px' }}\r\n                    type='button'\r\n                    class='btn btn-primary '\r\n                    onClick={handleAddClick}\r\n                  >\r\n                    Add Step {i + 2}\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        <div className='mb-3' style={{ marginTop: '10px' }}>\r\n          <label className='form-label'>Errors & Exceptions </label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='errorsExceptions'\r\n            value={errorsExceptions}\r\n            placeholder='Tell us what errors you are seeing and where in the test case they occur.'\r\n            onChange={(e) => setErrorsExceptions(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className='mb-3'>\r\n          <label className='form-label'>Googled </label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='googled'\r\n            value={googled}\r\n            placeholder='Include your google search queries (word for word) and results'\r\n            onChange={(e) => setGoogled(e.target.value)}\r\n          />\r\n        </div>\r\n        <div class='row justify-content-center'>\r\n          <Button\r\n            type='button'\r\n            color='primary '\r\n            style={{ textAlign: 'center', width: '12%' }}\r\n            onClick={ShowList}\r\n            id='copy'\r\n          >\r\n            COPY\r\n          </Button>\r\n          <Popover\r\n            placement='bottom'\r\n            isOpen={popoverOpen}\r\n            target='copy'\r\n            toggle={togglePopover}\r\n          >\r\n            <PopoverHeader style={{ textAlign: 'center' }}>\r\n              Copied!\r\n            </PopoverHeader>\r\n            <PopoverBody style={{ textAlign: 'center' }}>\r\n              Go ahead and paste this into the Slack Channel{' '}\r\n              <span>&#128578;</span>\r\n            </PopoverBody>\r\n          </Popover>\r\n        </div>\r\n        {/* <div style={{ marginTop: 20 }}>{JSON.stringify(inputList)}</div> */}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}